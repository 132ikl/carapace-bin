_kubectl__autoscale
autoscale
Auto-scale a Deployment, ReplicaSet, or ReplicationController
--allow-missing-template-keys   If true, ignore any errors in templates when a field or map key is missing in the template. Only app
--cpu-percent VAL  The target average CPU utilization (represented as a percent of requested CPU) over all the pods. If
--dry-run VAL  Must be "none", "server", or "client". If client strategy, only print the object that would be sent,
--field-manager VAL  Name of the manager used to track field ownership.
-f, --filename VAL  Filename, directory, or URL to files identifying the resource to autoscale.
--generator VAL  The name of the API generator to use. Currently there is only 1 generator.
-k, --kustomize VAL  Process the kustomization directory. This flag can't be used together with -f or -R.
--max VAL  The upper limit for the number of pods that can be set by the autoscaler. Required.
--min VAL  The lower limit for the number of pods that can be set by the autoscaler. If it's not specified or n
--name VAL  The name for the newly created object. If not specified, the name of the input resource will be used
-o, --output VAL  Output format. One of: json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|js
--record   Record current kubectl command in the resource annotation. If set to false, do not record the comman
-R, --recursive   Process the directory used in -f, --filename recursively. Useful when you want to manage related man
--save-config   If true, the configuration of current object will be saved in its annotation. Otherwise, the annotat
--template VAL  Template string or path to template file to use when -o=go-template, -o=go-template-file. The templa